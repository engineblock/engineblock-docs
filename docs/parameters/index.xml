<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Parameters on EngineBlock</title>
    <link>http://docs.engineblock.io/parameters/</link>
    <description>Recent content in Parameters on EngineBlock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://docs.engineblock.io/parameters/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parameter Usage</title>
      <link>http://docs.engineblock.io/parameters/parameter_usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.engineblock.io/parameters/parameter_usage/</guid>
      <description>To configure an EngineBlock activity to do something meaningful, you have to provide parameters to it. This can occur in one of several ways. This section is a guide on EngineBlock parameters, how they layer together, and when to use one form over another.
Command Line The command line is used to configure both the overall EngineBlock runtime (logging, etc) as well as the individual activities and scripts. Global EngineBLock options can be distinguished from scenario commands and their parameters because because global options always start with a single or double hyphen.</description>
    </item>
    
    <item>
      <title>Example Command</title>
      <link>http://docs.engineblock.io/parameters/example_command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.engineblock.io/parameters/example_command/</guid>
      <description>Most new users will be interested in a command line pattern that looks very much like this:
./eb... run type=stdout alias=test1 yaml=mystmts cycles=5M -v  This is basically telling EngineBlock to load an activity type known as stdout, naming it test1, with an input interval between 0 (inclusive) and 5000000 (exclusive), with statements and any other settings loaded from the file test1.yaml, using the the Standard YAML. This is a very common usage pattern for tools based on EngineBlock.</description>
    </item>
    
    <item>
      <title>Activity Params</title>
      <link>http://docs.engineblock.io/parameters/activity_params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.engineblock.io/parameters/activity_params/</guid>
      <description>Activity parameters are passed as named arguments for an activity, either on the command line or via a scenario script. On the command line, these take the form of
&amp;lt;paramname&amp;gt;=&amp;lt;paramvalue&amp;gt;  Some activity parameters are universal in that they can be used with any activity type. These parameters are recognized by EngineBlock whether or not they are recognized by a particular activity type implementation. These are called universal activity parameters.</description>
    </item>
    
    <item>
      <title>Statement Params</title>
      <link>http://docs.engineblock.io/parameters/statement_params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.engineblock.io/parameters/statement_params/</guid>
      <description>Statement parameters apply to the defined operations for an activity. Statement parameters are always configurable as part of a params block in YAML, for activities that use the Standard YAML format.
In some cases, an Activity Parameter of the same name can be used to establish a default value. In that case, it will be documented here with the parameter description.
ratio ratio: &amp;lt;ratio&amp;gt;
Determines the frequency of the affected statements in the operational sequence.</description>
    </item>
    
  </channel>
</rss>